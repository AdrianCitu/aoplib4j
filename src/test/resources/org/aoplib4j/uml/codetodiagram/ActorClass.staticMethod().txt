<?xml version="1.0"encoding="UTF-8"?>
<sequence>
<actors>
<actor id="org.aoplib4j.uml.codetodiagram.ActorClass" type="user">ActorClass</actor>
<actor id="org.aoplib4j.uml.Class1" type="system">Class1</actor>
<actor id="org.aoplib4j.uml.Class2" type="system">Class2</actor>
<actor id="org.aoplib4j.uml.Class3" type="system">Class3</actor>
</actors>
<messages>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="constructor()"/>
<message type="return" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="constructor()"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="actorMethodWithParams(class java.lang.String)"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.Class1" text="constructor(class java.lang.String)"/>
<message type="return" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="constructor(class java.lang.String)"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.Class1" text="method1Class1()"/>
<message type="call" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.Class2" text="constructor()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class1" text="constructor()"/>
<message type="call" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.Class2" text="method1Class2()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class2" text="method2Class2()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class2" text="method2Class2()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class3" text="constructor()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class2" text="constructor()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class3" text="method1Class3()"/>
<message type="call" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="method2Class3()"/>
<message type="call" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="toString()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="toString()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="method2Class3()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class2" text="method1Class3()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class1" text="method1Class2()"/>
<message type="return" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="method1Class1()"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="staticPrivateMethod(class java.lang.Integer)"/>
<message type="return" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="staticPrivateMethod(class java.lang.Integer)"/>
<message type="return" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="actorMethodWithParams(class java.lang.String)"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="nonAnnotatedMethod()"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.Class1" text="constructor(class java.lang.String)"/>
<message type="return" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="constructor(class java.lang.String)"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.Class1" text="method1Class1()"/>
<message type="call" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.Class2" text="constructor()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class1" text="constructor()"/>
<message type="call" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.Class2" text="method1Class2()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class2" text="method2Class2()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class2" text="method2Class2()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class3" text="constructor()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class2" text="constructor()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class3" text="method1Class3()"/>
<message type="call" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="method2Class3()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="method2Class3()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class2" text="method1Class3()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class1" text="method1Class2()"/>
<message type="return" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="method1Class1()"/>
<message type="return" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="nonAnnotatedMethod()"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="actorMethodWithParams(class java.lang.String)"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.Class1" text="constructor(class java.lang.String)"/>
<message type="return" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="constructor(class java.lang.String)"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.Class1" text="method1Class1()"/>
<message type="call" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.Class2" text="constructor()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class1" text="constructor()"/>
<message type="call" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.Class2" text="method1Class2()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class2" text="method2Class2()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class2" text="method2Class2()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class3" text="constructor()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class2" text="constructor()"/>
<message type="call" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class3" text="method1Class3()"/>
<message type="call" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="method2Class3()"/>
<message type="call" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="toString()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="toString()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class3" text="method2Class3()"/>
<message type="return" from="org.aoplib4j.uml.Class3" to="org.aoplib4j.uml.Class2" text="method1Class3()"/>
<message type="return" from="org.aoplib4j.uml.Class2" to="org.aoplib4j.uml.Class1" text="method1Class2()"/>
<message type="return" from="org.aoplib4j.uml.Class1" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="method1Class1()"/>
<message type="call" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="staticPrivateMethod(class java.lang.Integer)"/>
<message type="return" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="staticPrivateMethod(class java.lang.Integer)"/>
<message type="return" from="org.aoplib4j.uml.codetodiagram.ActorClass" to="org.aoplib4j.uml.codetodiagram.ActorClass" text="actorMethodWithParams(class java.lang.String)"/>
</messages>

</sequence>
